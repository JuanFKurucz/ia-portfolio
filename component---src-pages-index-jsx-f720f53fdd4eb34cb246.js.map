{"version":3,"sources":["webpack:///./src/pages/index.jsx"],"names":["PostWrapper","Index","edges","data","allMarkdownRemark","title","list","fontSize","key","to","style","map","node","id","excerpt","frontmatter","cover","path","date","childImageSharp","fluid"],"mappings":"mMAQA,IAAMA,EAAW,uRAyDFC,UA3CD,SAAC,GAAc,IACnBC,EADkB,EAAXC,KACQC,kBAAfF,MAYR,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAQG,MAAO,uCACf,YAAC,IAAD,CAAQA,MAAM,sCAAd,wCACA,YAAC,IAAD,CAAWC,KAfF,CACX,yCACA,wEACA,sBACA,yBACA,qDACA,YACA,2CACA,oBAO2B,GAAIC,SAAU,QACrC,YAAC,OAAD,CAAMC,IAAK,QAASC,GAAE,QAAWC,MAAO,CAACH,SAAS,SAChD,8CAIJ,YAACP,EAAD,KACGE,EAAMS,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAA6BD,EAA7BC,GAAIC,EAAyBF,EAAzBE,QAASC,EAAgBH,EAAhBG,YACbC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,KAAMZ,EAAgBU,EAAhBV,MAAOa,EAASH,EAATG,KAC5B,OACE,YAAC,IAAD,CACEV,IAAKK,EACLG,MAAOA,EAAMG,gBAAgBC,MAC7BH,KAAMA,EACNZ,MAAOA,EACPa,KAAMA,EACNJ,QAASA","file":"component---src-pages-index-jsx-f720f53fdd4eb34cb246.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport styled from '@emotion/styled';\nimport { Header, PostList, TagsBlock } from 'components';\nimport { Layout } from 'layouts';\n\nconst PostWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 4rem 4rem 1rem 4rem;\n  @media (max-width: 1000px) {\n    margin: 4rem 2rem 1rem 2rem;\n  }\n  @media (max-width: 700px) {\n    margin: 4rem 1rem 1rem 1rem;\n  }\n`;\n\nconst Index = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  const tags = [\n    \"Introducción al Aprendizaje Automático\",\n    \"Tratamiento previo de los datos y fundamentos de los algoritmos de ML\",\n    \"Algoritmos lineales\",\n    \"Algoritmos no lineales\",\n    \"Aprendizaje no supervisado y métodos de clustering\",\n    \"Ensambles\",\n    \"Ajuste, evaluación y sintonia de modelos\",\n    \"Caso de estudio\",\n  ];\n\n  return (\n    <Layout>\n      <Helmet title={'Inteligencia Artificial Portafolio'} />\n      <Header title=\"Juan Francisco Kurucz - Portafolio\">Portafolio de inteligencia artificial\n      <TagsBlock list={tags || []} fontSize={\"12px\"}>\n        <Link key={\"other\"} to={`/tags`} style={{fontSize:\"12px\"}}>\n          <span>Otras etiquetas</span>\n        </Link>\n      </TagsBlock>\n      </Header>\n      <PostWrapper>\n        {edges.map(({ node }) => {\n          const { id, excerpt, frontmatter } = node;\n          const { cover, path, title, date } = frontmatter;\n          return (\n            <PostList\n              key={id}\n              cover={cover.childImageSharp.fluid}\n              path={path}\n              title={title}\n              date={date}\n              excerpt={excerpt}\n            />\n          );\n        })}\n      </PostWrapper>\n    </Layout>\n  );\n};\n\nexport default Index;\n\nIndex.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 6\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 75)\n          frontmatter {\n            title\n            path\n            tags\n            date(formatString: \"MM.DD.YYYY\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}